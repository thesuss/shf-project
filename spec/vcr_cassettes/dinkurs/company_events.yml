---
http_interactions:
- request:
    method: get
    uri: https://dinkurs.se/lxml.asp?company_key=<company_key>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/xml;charset=UTF-8
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASPSESSIONIDQWASDCCS=NNKIDMPCCFMCLJLCMEGALLLD; secure; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Wed, 11 Apr 2018 13:32:45 GMT
      Content-Length:
      - '37448'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 11 Apr 2018 13:32:32 GMT
recorded_with: VCR 4.0.0
