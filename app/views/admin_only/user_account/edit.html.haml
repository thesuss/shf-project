- content_for :stylesheet_for_view do
  = stylesheet_link_tag 'image-actions-custom-menu', media: 'all'

-# FIXME show admin_only info (payments, edit status ). Make it look similar to show_for_member/applicant?

%header.entry-header
  :ruby
    username          = user_name_for_display(@user)
    admin_user_text   = show_if_user_is_admin(@user, t('.is_an_admin'))
    edit_profile_icon = edit_profile_link(@user, title: t('.edit_user_profile', name: username))
    title             = username + ' ' + ' ' + admin_user_text + ' ' + edit_profile_icon
  = content_title(title, user: current_user)

.entry-content.container
  = form_for(@user, as: :user, url: admin_only_user_account_path(@user) ) do |f|

    != model_errors_helper(@user)

    .login-name
      .row
        .col
          = field_or_none("#{ t('.email') }", mail_to(@user.email),
                         label_class: 'standard-label',
                         value_class: 'login-email')

    .membership
      .row.section-title
        %h3.section-title= t("membership").capitalize

      .row
        .form-group.col
          = f.label :membership_number
          = f.text_field :membership_number,  class: 'form-control'

    = render partial: 'users/show_application_section_row_cols', locals: { user: @user }


    - if @current_user.admin?
      .admin-only
        = render partial: 'users/edit_status_modal', locals: { user: @user }

        .user-info
          .row.section-title
            .col.mt-2
              %h3.section-title= t('.admin_user_info_title')
          .row
            .col.admin-note

              %p{ class: "membership-packet #{ @user.membership_packet_sent? ? 'sent' : 'not-sent' }",
              id: 'date-membership-packet-sent' }
                = membership_packet_str(@user)

              %p
                #{ t('.created') } #{ i18n_time_ago_in_words(@user.created_at) }.
              - if @user.last_sign_in_at.blank? && @user.current_sign_in_at.blank?
                %p
                  #{ @user.email } #{ t('.user_has_never_signed_in') }
              - else
                %p
                  #{ t('.last_login') }:
                  #{ most_recent_login_time @user }
                  (#{ i18n_time_ago_in_words(most_recent_login_time @user) })
                %p
                  #{ t('.logged_in_count') }:
                  = @user.sign_in_count
              - if @user.reset_password_sent_at.blank?
                %p= t('.password_never_reset')
              - else
                %p
                  %b #{ t('.reset_password_sent_at') }:
                  #{ @user.reset_password_sent_at }
                  #{ i18n_time_ago_in_words(@user.reset_password_sent_at) })
        .row
          .col
            = f.submit "#{t('submit')}", class: 'btn btn-primary form-control m-2'


    = render partial: 'users/show_member_images_row_cols', locals: { user: @user, app_configuration: @app_configuration }
