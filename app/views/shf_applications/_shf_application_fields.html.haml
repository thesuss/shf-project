
.app-section
  - unless association_empty?(all_business_categories)
    %h2= t('shf_applications.new.application_dog_category')
    %p= t('shf_applications.new.clue_selected_categories')
    .checkbox.col-xs-offset-1
      = f.collection_check_boxes :business_category_ids, all_business_categories, :id, :name do |b|
        = b.check_box(class: 'text-nicelabel', position_class: 'text_checkbox') + b.label

.app-section#supporting-files
  %h2= t('shf_applications.new.upload_files_section')
  .answers
    %p= t('shf_applications.new.upload_files_instructions')

    .files
      .container.mt-3
        .row
          .col-md-6
            #upload-files
              %h3.upload-button-pre= t('shf_applications.new.upload_files')
              %span{ class: 'btn btn-primary mt-3 btn-file' }
                = t('shf_applications.new.upload_button')
                = f.file_field 'actual_files[]',
                  multiple: true,
                  name: 'uploaded_file[actual_files][]',
                  class: 'upload-field',
                  id: 'upload-button',
                  accept: @allowed_file_types.values.join(',')

              - submit_label = @shf_application.new_record? ? t('submit') : t('save')
              %p
                = t('shf_applications.new.upload_multiple_files')
                %br
                %br
                = t('shf_applications.new.upload_allowed_file_types')
                = @allowed_file_types.keys.flatten.join(' ')

              %h4.hidden.files-to-upload-title#files-to-upload-title= t('shf_applications.new.will_be_uploaded')

              -# The table that lists the files to be uploaded when the form is submitted:
              %table.hidden.table#files-to-upload
                %tbody.files{ 'data-toggle': "modal-gallery", 'data-target': "#modal-gallery" }
          .col-md-6
            = render 'uploaded_files_list', shf_application: @shf_application
    %br
    %p
      %span.file-delivery-selection
        = t('shf_applications.new.file_delivery_selection')
      %br

      - radio_buttons_collection, footnotes = file_delivery_radio_buttons_collection

      = f.collection_radio_buttons(:file_delivery_method_id,
                                   radio_buttons_collection,
                                   :first, :second, {}) do |rb|
        = rb.label(class: 'form-check form-check-inline') do
          %small= rb.radio_button + ' ' + rb.text + ' '
      %small.file-delivery-footnotes
        = footnotes

    %p.upload-more-note.instructions= t('shf_applications.new.upload_more_files') if controller.action_name == 'new'

.app-section
  %h2= t('shf_applications.new.section_title_about_you')
  .answers

    = f.label :company_number, t('shf_applications.show.company_number'), class: 'required'
    = fas_tooltip(t('.company_numbers_tooltip'))

    %p.field-instruction= t('shf_applications.new.enter_company_number')

    #company-number-entry
      = company_number_entry_field(company_numbers)

    .new-company-link

      -# NOTE: Capybara cannot find link without 'href' attribute
      %a.btn.btn-secondary.btn-sm{ href: '#', 'data-toggle': 'modal',
                                 'data-target': '#company-create-modal' }

        = t('companies.new.title')

    .clearfix

    %br

    = f.label :contact_email, t('shf_applications.show.contact_email'), class: 'required'
    %p.field-instruction= t('shf_applications.new.can_be_same_email')
    = f.email_field :contact_email,  class: 'form-control'
    %br
    = f.label :phone_number, t('shf_applications.show.phone_number')
    %br
    = f.telephone_field :phone_number,  class: 'form-control'


- if @shf_application.may_is_ready_for_review?
  = render 'ready_for_review', f: f



:javascript

  $("#upload-button").on('change',function () {
    // update the list of files to be uploaded

    var to_upload_title = document.getElementById("files-to-upload-title");
    var upload_table = document.getElementById("files-to-upload");

    var filesUploadButton = document.getElementById("upload-button");

    $(upload_table).find("tr>td").remove();

    if ('files' in filesUploadButton) {

        // unhide the title and table so we can show what will be uploaded
        to_upload_title.className = to_upload_title.className.replace( /(?:^|\s)hidden(?!\S)/g , '' );
        upload_table.className = upload_table.className.replace( /(?:^|\s)hidden(?!\S)/g , '' );

        for (var i = 0; i < filesUploadButton.files.length; i++) {

          var file = filesUploadButton.files[i];
          if ('name' in file) {
            var new_lastrow = upload_table.insertRow(-1);
            var filename = new_lastrow.insertCell(0);
            filename.innerHTML = file.name
          }

        }

    }

  });
